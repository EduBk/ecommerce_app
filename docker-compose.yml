services:
  nginx:
    image: nginx:latest
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:8080"
    depends_on:
      # - client
      - server

  # client:
  #   container_name: client
  #   image: client
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile.dev
  #   env_file:
  #     - ./client/.env
  #   ports:
  #     - "3000:3000"
  #   develop:
  #     watch:
  #       - action: sync
  #         path: ./client/
  #         target: /app/
  #         ignore:
  #           - node_modules/
  #       - action: rebuild
  #         path: package.json
  #   depends_on:
  #     - server

  server:
    container_name: server
    image: server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    env_file:
      - ./server/.env
    ports:
      - '3001:3001'
    develop:
      watch:
        - action: sync
          path: ./server/
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    depends_on:
      - mysql
      # - postgres
      # - mssql

  # mysql:
  #   image: 'mysql:latest'
  #   restart: always
  #   ports:
  #     - '3306:3306'
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=admin
  #     - MYSQL_DATABASE=compu_dev
  #   volumes:
  #     - ./db/mysql:/var/lib/mysql
  #     - ./db/mysql:/var/opt/mysql/data

  # postgres:
  #   image: 'postgres:latest'
  #   restart: always
  #   ports:
  #     - '5432:5432'
  #   environment:
  #     - POSTGRES_DB=klitox
  #     - POSTGRES_USER=enit
  #     - POSTGRES_PASSWORD=admin123
  #   volumes:
  #     - ./db/postgres:/var/lib/postgresql/data

  # pgadmin:
  #   image: 'dpage/pgadmin4'
  #   ports:
  #     - '5050:80'
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=enit@gmail.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin123

  # mssql:
  #   image: 'mcr.microsoft.com/mssql/server'
  #   restart: always
  #   ports:
  #     - '1433:1433'
  #   environment:
  #     - MSSQL_SA_PASSWORD=admin
  #     - ACCEPT_EULA=Y
  #     - MSSQL_PID=Developer
  #     - MSSQL_DATA_DIR=/var/opt/sqlserver/data
  #     - MSSQL_LOG_DIR=/var/opt/sqlserver/log
  #     - MSSQL_BACKUP_DIR=/var/opt/sqlserver/backup
  #   volumes:
  #     - ./db/mssql:/var/opt/mssql
  #     - ./db/mssql:/var/opt/sqlserver/data
  #     - ./db/mssql:/var/opt/sqlserver/log
  #     - ./db/mssql:/var/opt/sqlserver/backup
  #     - /c/docker/shared:/usr/shared
      
      #despues de levantar el servicio docker-compose correr
      # - docker-compose exec server npx prisma migrate dev
      # - docker-compose exec server npx prisma db seed -- --environment (development / production)
